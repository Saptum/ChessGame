#include "pawn.h"

bool Pawn::IsValidMove(int startX, int startY, int endX, int endY) const
{
    // Определяем направление движения: для белых пешек вперед – увеличение номера строки, для черных – уменьшение
    int direction = (color == Color::White) ? 1 : -1;

    // Задаем начальную строку для пешек: для белых это 1-я строка (индекс 1), для черных – 6-я строка (индекс 6).
    int initialRow = (color == Color::White) ? 1 : 6;

    // 1. Проверка обычного хода на одну клетку вперед:
    // Пешка должна оставаться в той же колонке и переместиться ровно на одну клетку в направлении движения.
    if (startX ==endX && endY == startY + direction)
    {
        return  true;// Ход допустим.
    }

    // 2. Проверка первого хода: ход на две клетки вперед:
    // Пешка может переместиться на две клетки вперед, только если она находится на своей начальной позиции.
	if (startX == endX && startY == initialRow && endY == startY + 2 * direction)
	{
        return true;
	}
    
    // 3. Проверка диагонального хода для взятия:
    // Пешка перемещается по диагонали на одну клетку в направлении движения.
    // В полной реализации здесь следует проверить, что целевая клетка содержит фигуру соперника.
    if ((endX == startX + 1 || endX == startX -1) && endY == startY +direction)
    {
        return true;
    }

    // Если ни одно из условий не выполнено, ход считается недопустимым.
    return false;
}
 